import { ENV } from '../../constants';
import { AccountEnvOptionsType, ConversationHashOptionsType, walletType } from '../../types';
declare type CreateUserOptionsType = {
    user: string;
    wallet?: walletType;
    name?: string;
    nftOwner?: string | null;
    encryptedPassword?: string | null;
    publicKey?: string;
    encryptedPrivateKey?: string;
    encryptionType?: string;
    signature?: string;
    sigType?: string;
    env?: ENV;
};
export declare const createUserService: (options: CreateUserOptionsType) => Promise<any>;
export declare const upgradeUserService: (options: CreateUserOptionsType) => Promise<any>;
export declare const getConversationHashService: (options: ConversationHashOptionsType) => Promise<{
    threadHash: string;
}>;
export interface GetMessagesOptionsType extends Omit<AccountEnvOptionsType, 'account'> {
    threadhash: string;
    limit: number;
}
export declare const getMessagesService: (options: GetMessagesOptionsType) => Promise<any>;
export {};
